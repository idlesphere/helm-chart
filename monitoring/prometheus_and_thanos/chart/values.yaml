prometheus:
  version: "v2.22.2"
  biz:
    resources:
      limits:
        cpu: 2
        memory: 4G
      requests:
        cpu: 500m
        memory: 4G
    storageSize: "50G"
    thanos:
      resources:
        limits:
          cpu: 2
          memory: 2G
        requests:
          cpu: 1
          memory: 2G
    
  infra:
    resources:
      limits:
        cpu: 2
        memory: 10G
      requests:
        cpu: 1
        memory: 10G
    storageSize: "100G"
    thanos:
      resources:
        limits:
          cpu: 2
          memory: 2G
        requests:
          cpu: 1
          memory: 2G

datacenter: changeme

# thanos VirtualService
istio:
  enabled: true

# thanos
thanos:
  image:
    repository: quay.io/thanos/thanos
    tag: v0.18.0
    pullPolicy: IfNotPresent

  # https://github.com/thanos-io/thanos/blob/master/docs/storage.md
  # objstore: {}
  # type: GCS
  # config:
  #   bucket: "thanos"
  #   service_account: |-
  #     {
  #       "type": "service_account",
  #       "project_id": "project",
  #       "private_key_id": "abcdefghijklmnopqrstuvwxyz12345678906666",
  #       "private_key": "-----BEGIN PRIVATE KEY-----\...\n-----END PRIVATE KEY-----\n",
  #       "client_email": "project@thanos.iam.gserviceaccount.com",
  #       "client_id": "123456789012345678901",
  #       "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  #       "token_uri": "https://oauth2.googleapis.com/token",
  #       "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  #       "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/thanos%40gitpods.iam.gserviceaccount.com"
  #     }
  #
  # type: S3
  # config:
  #   bucket: ""
  #   endpoint: ""
  #   region: ""
  #   access_key: ""
  #   insecure: false
  #   signature_version2: false
  #   encrypt_sse: false
  #   secret_key: ""
  #   put_user_metadata: {}
  #   http_config:
  #     idle_conn_timeout: 0s
  #     response_header_timeout: 0s
  #     insecure_skip_verify: false
  #   trace:
  #     enable: false
  #   part_size: 0
  #
  # type: AZURE
  # config:
  #   storage_account: ""
  #   storage_account_key: ""
  #   container: ""
  #   endpoint: ""
  #   max_retries: 0
  #
  # type: SWIFT
  # config:
  #   auth_version: 0
  #   auth_url: ""
  #   username: ""
  #   user_domain_name: ""
  #   user_domain_id: ""
  #   user_id: ""
  #   password: ""
  #   domain_id: ""
  #   domain_name: ""
  #   project_id: ""
  #   project_name: ""
  #   project_domain_id: ""
  #   project_domain_name: ""
  #   region_name: ""
  #   container_name: ""
  #   large_object_chunk_size: 1073741824
  #   large_object_segments_container_name: ""
  #   retries: 3
  #   connect_timeout: 10s
  #   timeout: 5m
  #   use_dynamic_large_objects: false
  #
  # type: COS
  # config:
  #   bucket: ""
  #   region: ""
  #   app_id: ""
  #   secret_key: ""
  #   secret_id: ""
  #
  # type: ALIYUNOSS
  # config:
  #   endpoint: ""
  #   bucket: ""
  #   access_key_id: ""
  #   access_key_secret: ""

  sidecar:
    enabled: false

  compact:
    enabled: true
    serviceAccount: prometheus
    metrics:
      serviceMonitor:
        enabled: true
        labels:
          prometheus: infra-prometheus
    resources:
      limits:
        cpu: 2
        memory: 2G
      requests:
        cpu: 1
        memory: 2G

  query:
    webRoutePrefix: "/thanos/"
    webExternalPrefix: "thanos"
    stores:
      - "infra-prometheus-thanos:10901"
      - "biz-prometheus-thanos:10901"
      - "istio-prometheus-thanos.istio-system:10901"
    metrics:
      serviceMonitor:
        enabled: true
        labels:
          prometheus: infra-prometheus
    resources:
      limits:
        cpu: 2
        memory: 2G
      requests:
        cpu: 1
        memory: 2G

  store:
    enabled: true
    serviceAccount: prometheus
    metrics:
      serviceMonitor:
        enabled: true
        labels:
          prometheus: infra-prometheus
    resources:
      limits:
        cpu: 2
        memory: 2G
      requests:
        cpu: 1
        memory: 2G

  bucket:
    enabled: true
    serviceAccount: prometheus
    resources:
      limits:
        cpu: 2
        memory: 2G
      requests:
        cpu: 1
        memory: 2G

# infra
kube-state-metrics:
  serviceMonitor:
    enabled: true
    selector:
      prometheus: infra-prometheus
    metricRelabelings:
      - sourceLabels: 
          - exported_pod
        targetLabel: pod
      - sourceLabels: 
          - exported_namespace
        targetLabel: namespace

prometheus-node-exporter:
  prometheus:
    monitor:
      enabled: true
      additionalLabels:
        prometheus: infra-prometheus
