---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: infra-prometheus
  labels:
    app: infra-prometheus
    chart: {{ .Chart.Name }}
    version: {{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  baseImage: quay.io/prometheus/prometheus
  version: {{ .Values.prometheus.version | quote }}
  enableAdminAPI: false
  externalLabels:
    datacenter: {{ .Values.datacenter }}
    prometheus: infra-prometheus
  additionalScrapeConfigs:
    key: scrape.yaml
    name: infra-prometheus-scrape-configs
  additionalAlertManagerConfigs:
    key: additional-alertmanager-configs.yaml
    name: alertmanager-config
  podMetadata:
    annotations:
      sidecar.istio.io/inject: "false"
  listenLocal: false
  logFormat: logfmt
  logLevel: warn
  paused: false
  replicas: 1
  resources:
    limits:
      cpu: {{ .Values.prometheus.infra.resources.limits.cpu | quote }}
      memory: {{ .Values.prometheus.infra.resources.limits.memory }}
    requests:
      cpu: {{ .Values.prometheus.infra.resources.requests.cpu | quote }}
      memory: {{ .Values.prometheus.infra.resources.requests.memory }}
  retention: 2h
  routePrefix: /
  ruleNamespaceSelector: {}
  ruleSelector:
    matchExpressions:
    - key: prometheus
      operator: In
      values:
      - infra-prometheus
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  portName: http-prom
  serviceAccountName: prometheus
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchExpressions:
    - key: prometheus
      operator: In
      values:
      - infra-prometheus
  podMonitorSelector:
    matchExpressions:
    - key: prometheus
      operator: In
      values:
      - infra-prometheus
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.prometheus.infra.storageSize }}
  thanos:
    image: "{{ .Values.thanos.image.repository }}:{{ .Values.thanos.image.tag }}"
    objectStorageConfig:
      key: "{{ .Values.thanos.objstoreFile }}"
      name: "{{ .Values.thanos.objstoreSecretOverride }}"
    resources:
      limits:
        cpu: {{ .Values.prometheus.infra.thanos.resources.limits.cpu | quote }}
        memory: {{ .Values.prometheus.infra.thanos.resources.limits.memory }}
      requests:
        cpu: {{ .Values.prometheus.infra.thanos.resources.requests.cpu | quote }}
        memory: {{ .Values.prometheus.infra.thanos.resources.requests.memory }}

---
apiVersion: v1
kind: Service
metadata:
  name: infra-prometheus-thanos
  labels:
    chart: {{ .Chart.Name }}
    version: {{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  ports:
  - name: grpc-thanos
    port: 10901
    protocol: TCP
    targetPort: 10901
  selector:
    prometheus: infra-prometheus

---
apiVersion: v1
kind: Service
metadata:
  name: infra-prometheus
  labels:
    app: infra-prometheus
    chart: {{ .Chart.Name }}
    version: {{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  ports:
  - name: http-prom
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    prometheus: infra-prometheus
